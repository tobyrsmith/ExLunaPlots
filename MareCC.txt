10e01,177
10e00,292
10e-1,403
10e-2,516
10e-3,629
10e-4,742
10e-5,854
10e-6,967
10e-7,1079

177,292,403,516,629,742,854,967,1079

113,per,decade   112.75

288
317
323
382
430
489
562
617
681
713
749
777
791
833
882
895
933
948
1048
1049
1051




288,317,323,382,430,489,562,617,681,713,749,777,791,833,882,895,933,948,1048,1049,1051

1.08492128603
0.600843077571
0.531696396331
0.159786403987
0.0600843077571
0.0180566495068
0.00407961771561
0.00133012913196
0.000361012403865
0.000188077257416
9.03134041709e-05
5.10463391717e-05
3.83769800579e-05
1.63075748488e-05
6.00843077571e-06
4.61016866106e-06
2.12536550834e-06
1.56563407716e-06
2.04049019988e-07
1.99933217804e-07
1.91948994166e-07

In [10]: x = np.array([177,292,403,516,629,742,854,967,1079])

In [11]: print x
[ 177  292  403  516  629  742  854  967 1079]

In [12]: y = x[1:]

In [13]: print y
[ 292  403  516  629  742  854  967 1079]

In [14]: print x[-1:]
[1079]

In [15]: print x[:-1]
[177 292 403 516 629 742 854 967]

In [16]: print x[1:]
[ 292  403  516  629  742  854  967 1079]

In [17]: print x[1:] - x[:-1]
[115 111 113 113 113 112 113 112]

In [18]: d =
np.array([288,317,323,382,430,489,562,617,681,713,749,777,791,833,882,895,933,948,1048,1049,1051])

In [19]: print d
[ 288  317  323  382  430  489  562  617  681  713  749  777  791  833
882
  895  933  948 1048 1049 1051]

In [20]: space = x[1:] - x[:-1]

In [21]: space.mean()
Out[21]: 112.75

In [22]: d2 = d - 177

In [23]: print d2
[111 140 146 205 253 312 385 440 504 536 572 600 614 656 705 718 756 771
 871 872 874]

In [24]: print d2
[111 140 146 205 253 312 385 440 504 536 572 600 614 656 705 718 756 771
 871 872 874]

In [25]: d3 = d2/113.0

In [26]: print d3
[ 0.98230088  1.23893805  1.2920354   1.81415929  2.23893805  2.76106195
  3.40707965  3.89380531  4.46017699  4.74336283  5.0619469   5.30973451
  5.43362832  5.80530973  6.23893805  6.3539823   6.69026549  6.82300885
  7.7079646   7.71681416  7.73451327]

In [27]: d4 = -d3 

In [28]: print d4
[-0.98230088 -1.23893805 -1.2920354  -1.81415929 -2.23893805 -2.76106195
 -3.40707965 -3.89380531 -4.46017699 -4.74336283 -5.0619469  -5.30973451
 -5.43362832 -5.80530973 -6.23893805 -6.3539823  -6.69026549 -6.82300885
 -7.7079646  -7.71681416 -7.73451327]

In [29]: data = 10 ** d4

In [30]: print data
[  1.04159555e-01   5.76848738e-02   5.10463392e-02   1.53405421e-02
   5.76848738e-03   1.73355671e-03   3.91670041e-04   1.27701115e-04
   3.46595571e-05   1.80566495e-05   8.67067878e-06   4.90078316e-06
   3.68444164e-06   1.56563408e-06   5.76848738e-07   4.42606410e-07
   2.04049020e-07   1.50311134e-07   1.95900434e-08   1.91948994e-08
   1.84283616e-08]

In [31]: d2 = d - 292

In [32]: print d2
[ -4  25  31  90 138 197 270 325 389 421 457 485 499 541 590 603 641 656
 756 757 759]

In [33]: d3 = d2/113.0

In [34]: print d3
[-0.03539823  0.22123894  0.27433628  0.79646018  1.22123894  1.74336283
  2.38938053  2.87610619  3.44247788  3.72566372  4.04424779  4.2920354
  4.4159292   4.78761062  5.22123894  5.33628319  5.67256637  5.80530973
  6.69026549  6.69911504  6.71681416]

In [35]: d4 = -d3

In [36]: print d4
[ 0.03539823 -0.22123894 -0.27433628 -0.79646018 -1.22123894 -1.74336283
 -2.38938053 -2.87610619 -3.44247788 -3.72566372 -4.04424779 -4.2920354
 -4.4159292  -4.78761062 -5.22123894 -5.33628319 -5.67256637 -5.80530973
 -6.69026549 -6.69911504 -6.71681416]

In [37]: data = 10 ** d4

In [38]: print data
[  1.08492129e+00   6.00843078e-01   5.31696396e-01   1.59786404e-01
   6.00843078e-02   1.80566495e-02   4.07961772e-03   1.33012913e-03
   3.61012404e-04   1.88077257e-04   9.03134042e-05   5.10463392e-05
   3.83769801e-05   1.63075748e-05   6.00843078e-06   4.61016866e-06
   2.12536551e-06   1.56563408e-06   2.04049020e-07   1.99933218e-07
   1.91948994e-07]





In [43]: b = np.arange(-20,20,1)

In [44]: print np.sqrt(2) ** b
[  9.76562500e-04   1.38106793e-03   1.95312500e-03   2.76213586e-03
   3.90625000e-03   5.52427173e-03   7.81250000e-03   1.10485435e-02
   1.56250000e-02   2.20970869e-02   3.12500000e-02   4.41941738e-02
   6.25000000e-02   8.83883476e-02   1.25000000e-01   1.76776695e-01
   2.50000000e-01   3.53553391e-01   5.00000000e-01   7.07106781e-01
   1.00000000e+00   1.41421356e+00   2.00000000e+00   2.82842712e+00
   4.00000000e+00   5.65685425e+00   8.00000000e+00   1.13137085e+01
   1.60000000e+01   2.26274170e+01   3.20000000e+01   4.52548340e+01
   6.40000000e+01   9.05096680e+01   1.28000000e+02   1.81019336e+02
   2.56000000e+02   3.62038672e+02   5.12000000e+02   7.24077344e+02]

In [45]: c = b + np.sqrt(2)

In [46]: print c
[-18.58578644 -17.58578644 -16.58578644 -15.58578644 -14.58578644
 -13.58578644 -12.58578644 -11.58578644 -10.58578644  -9.58578644
  -8.58578644  -7.58578644  -6.58578644  -5.58578644  -4.58578644
  -3.58578644  -2.58578644  -1.58578644  -0.58578644   0.41421356
   1.41421356   2.41421356   3.41421356   4.41421356   5.41421356
   6.41421356   7.41421356   8.41421356   9.41421356  10.41421356
  11.41421356  12.41421356  13.41421356  14.41421356  15.41421356
  16.41421356  17.41421356  18.41421356  19.41421356  20.41421356]

In [47]: c = b + np.sqrt(2)

In [48]: print np.sqrt(2) ** c
[  1.59426457e-03   2.25463058e-03   3.18852914e-03   4.50926115e-03
   6.37705828e-03   9.01852231e-03   1.27541166e-02   1.80370446e-02
   2.55082331e-02   3.60740892e-02   5.10164662e-02   7.21481785e-02
   1.02032932e-01   1.44296357e-01   2.04065865e-01   2.88592714e-01
   4.08131730e-01   5.77185428e-01   8.16263460e-01   1.15437086e+00
   1.63252692e+00   2.30874171e+00   3.26505384e+00   4.61748342e+00
   6.53010768e+00   9.23496684e+00   1.30602154e+01   1.84699337e+01
   2.61204307e+01   3.69398674e+01   5.22408614e+01   7.38797347e+01
   1.04481723e+02   1.47759469e+02   2.08963446e+02   2.95518939e+02
   4.17926891e+02   5.91037878e+02   8.35853783e+02   1.18207576e+03]

0.00159426456976
0.00225463057657
0.00318852913953
0.00450926115314
0.00637705827906
0.00901852230628
0.0127541165581
0.0180370446126
0.0255082331162
0.0360740892251
0.0510164662324
0.0721481784503
0.102032932465
0.144296356901
0.20406586493
0.288592713801
0.40813172986
0.577185427602
0.816263459719
1.1543708552
1.63252691944
2.30874171041
3.26505383888
4.61748342082
6.53010767775
9.23496684163
13.0602153555
18.4699336833
26.120430711
36.9398673665
52.240861422
73.8797347331
104.481722844
147.759469466
208.963445688
295.518938932
417.926891376
591.037877865
835.853782752
1182.07575573

